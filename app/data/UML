@startuml

class Address {
  -double lat
  -double lon
  -String street
  -String adrNum
  -String adrLet
  -String postcode
  -String city
  +double getLat()
  +doule getLon()
  +String getStreet()
  +String getAdrNum()
  +String getAdrLet()
  +String getPostcode()
  +String getCity()
}

class App {
  +void main()
  +void start()
}

class Building {
  -long serialVersionUID
  Paint paint
  String buildingType
  +void fill()
}

class Colorscheme {
  Color scrub
  Color water
  Color building
  Color landuse
  Color highway
  Color meadow
  Color grass
  Color residential
  Color other
  ArrayList<String> themes
  + ArrayList<String> getThemes()
  + Color get()
  + void setColorscheme()
  + void defaultMode()
  - void colorBlindMode()
  + void darkMode()
}

class Controller {
  double lastX
  double lastY
  double scale
  -String getScaleLabel()
  -double getScale()
}

class Highway {
  -long serialVersionUID
  String roadType
  boolean isBikeable
  boolean isDriveable
  String roadName
  int maxSpeed
  +void draw()
  +void fill()
}

class Landuse {
  -long serialVersionUID
  Paint paint
  String land
  +void draw()
  +void fill()
}

class Launch {
  +void main()
}

class Model {
  int counter
  List<Line> lines
  List<Way> ways
  List<Building> buildings
  List<Highway> highways
  List<Landuse> landuses
  List<Natural> naturals
  List<Relation> natRelations
  List<Relation> buildRelations
  List<Relation> landuseRelations
  Trie<Address> addresses
  double minlat
  double maxlat
  double minlon
  double maxlon;
  Model load()
  void save()
  -void parseZip()
  -void parseOSM()
  -void parseOSM()
  -void parseTXT()
}

class Natural{
    -long serialVersionUID
  Paint paint
  String value
  +void draw()
  +void fill()
}

class Node {
  double lat
  double lon
  +double getLat()
  +double getLon()
  +boolean isNodeEqual()
}

class Relation {
  ArrayList<List<Node>> outers
  ArrayList<List<Node>> inners
  String v
  String k
  Way relationTrace
  +void fill()
  +Way createWay()
  +ArrayList<Node> rev()
}

class View {
  Colorscheme colors
  Canvas canvas
  double x1
  double x2
  double y1
  double y2
  Affine trans
  Label scaleLabel
  Model model
  void redraw()
  void pan()
  void zoom()
  +Point2D mouseToModel()
}

class Way {
  double[] coords
  +void draw()
  +void fill()
}

App -- Model
App -- View
App -- Controller
Controller --> View
Way <|-- Highway
View --> Colorscheme
View --> Model
Model "1" --> "0..*" Address
Model "1" --> "0..*" Building
Model "1" --> "0..*" Highway
Model "1" --> "0..*" Landuse
Model "1" --> "0..*" Natural
Model "1" --> "0..*" Relation

@enduml